@model MyPoli.Entities.Student
@inject MyPoli.Common.DTOs.CurrentUserDto CurrentUser

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Student</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Forename
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.FirstName)
        </dd>
        <dt class="col-sm-2">
            Surname
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.Birthday)
        </dt>
        <dd class="col-sm-10">
            @Model.Person.Birthday.ToString("dd/MM/yyy")
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.Email)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.Gender.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Person.Nationality)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Person.Nationality.Name)
        </dd>
        <dt class="col-sm-2">
            Start Date
        </dt>
        <dd class="col-sm-10">
            @Model.StartDate.ToString("dd/MM/yyy")
        </dd>
        <dt class="col-sm-2">
            End Date
        </dt>
        <dd class="col-sm-10">
            @Model.EndDate.ToString("dd/MM/yyy")
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Group)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Group.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status.Name)
        </dd>
        <dt class="col-sm-2">
            Visible for course
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsSeenInCourse)
        </dd>
        <dt class="col-sm-2">
            Visible for group
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsSeenInGroup)
        </dd>
        @if (CurrentUser.Id == Model.Id)
        {
            <dt class="col-sm-2">
                Subjects:
            </dt>
            @foreach (var subject in Model.StudentSubjects.Select(ss => ss.Subject).OrderBy(s => s.Name))
                if (!subject.IsDeleted)
                {
                    <dd class="col-sm-10">
                        <a asp-controller="Subjects" asp-action="Details" asp-route-id="@subject.Id">@subject.Name</a>
                    </dd>
                    <dt class="col-sm-2">

                    </dt>
                }
        }
    </dl>
</div>
<div>
    @if (CurrentUser.Roles.Contains("Secretary"))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-info">Edit</a>
    }
    else if (CurrentUser.Roles.Contains("Student") && Model.Id == CurrentUser.Id)
    {
        <a asp-action="EditYourself" asp-route-id="@Model.Id" class="btn btn-info">Edit</a>
    }
    <a asp-action="Index" class="btn btn-primary">Back to List</a>
</div>
