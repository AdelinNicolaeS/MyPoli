
@model MyPoli.BusinessLogic.Models.PaginatedList<MyPoli.Entities.Thesis>
@inject MyPoli.Common.DTOs.CurrentUserDto CurrentUser
@{
    ViewData["Title"] = "Index";
}

<h1>All theses</h1>

@if (CurrentUser.Roles.Contains("Student"))
{
    <p>
        <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
        <a asp-action="Index" class="btn btn-outline-primary">Back to Full List</a>
    </p>
}
else
{
    <p>
        <a asp-action="Index" class="btn btn-outline-primary">Back to Full List</a>
    </p>
}
@using (Html.BeginForm())
{
    <p>
        Search: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}
<table class="table table-striped table-hover table-bordered">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSort })
            </th>
            <th>
                @Html.ActionLink("Student", "Index", new { sortOrder = ViewBag.StudentSort })
            </th>
            <th>
                @Html.ActionLink("Teacher", "Index", new { sortOrder = ViewBag.TeacherSort })
            </th>
            <th>
                Content
            </th>
            <th>
                @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSort })
            </th>

            <th>
                @Html.ActionLink("Approved", "Index", new { sortOrder = ViewBag.ApprovedSort })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            if (!item.ApprovedByTeacher)
            {
                <tr class="table-danger">
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @item.Student.Person.FirstName @item.Student.Person.LastName
                    </td>
                    <td>
                        @item.Teacher.Person.FirstName @item.Teacher.Person.LastName
                    </td>
                    <td>
                        <a asp-controller="Theses" asp-action="ViewThesis" asp-route-id="@item.Id" target="_blank">Link</a>
                    </td>
                    <td>
                        @item.Date.ToString("dd/MM/yyyy")
                    </td>
                    <td>
                        @item.ApprovedByTeacher
                    </td>
                    <td>

                        @if (CurrentUser.Roles.Contains("Student") || CurrentUser.Roles.Contains("Secretary"))
                        {<a asp-action="Edit" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Edit</a>
                            <a asp-action="Delete" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Delete</a>
                        <a asp-action="Download" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Download</a>}
                        @if (CurrentUser.Roles.Contains("Teacher"))
                        {
                            <a asp-action="Edit" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Edit</a>
                            <a asp-action="Approve" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Approve</a>
                            <a asp-action="Download" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Download</a>
                        }
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @item.Student.Person.FirstName @item.Student.Person.LastName
                    </td>
                    <td>
                        @item.Teacher.Person.FirstName @item.Teacher.Person.LastName
                    </td>
                    <td>
                        <a asp-controller="Theses" asp-action="ViewThesis" asp-route-id="@item.Id" target="_blank">Link</a>
                    </td>
                    <td>
                        @item.Date.ToString("dd/MM/yyyy")
                    </td>

                    <td>
                        @item.ApprovedByTeacher
                    </td>
                    <td>
                        @if (CurrentUser.Roles.Contains("Student") || CurrentUser.Roles.Contains("Secretary"))
                        {<a asp-action="Edit" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Edit</a>
                            <a asp-action="Delete" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Delete</a>
                        <a asp-action="Download" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Download</a>}
                        @if (CurrentUser.Roles.Contains("Teacher"))
                        {
                            <a asp-action="Edit" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Edit</a>
                            <a asp-action="Download" class="btn btn-sm btn-primary active" asp-route-id="@item.Id">Download</a>
                        }
                    </td>
                </tr>
            }

        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary btn-sm active @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary btn-sm active @nextDisabled">
    Next
</a>