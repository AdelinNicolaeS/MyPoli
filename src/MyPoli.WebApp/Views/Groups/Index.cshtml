@*@model IEnumerable<MyPoli.Entities.Group>*@
@model MyPoli.BusinessLogic.Models.PaginatedList<MyPoli.Entities.Group>

@inject MyPoli.Common.DTOs.CurrentUserDto CurrentUser
@{
    ViewData["Title"] = "Index";
}

<h1>All groups</h1>

@if (CurrentUser.Roles.Contains("Secretary"))
{
    <p>
        <a asp-action="Create" class="btn btn-outline-primary">Create New</a>
        <a asp-action="Index" class="btn btn-outline-primary">Back to Full List</a>
    </p>
}
else
{
    <p>
        <a asp-action="Index" class="btn btn-outline-primary">Back to Full List</a>
    </p>
}
@using (Html.BeginForm())
{
    <p>
        Search: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}
<table class="table table-hover table-striped table-bordered">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Specialization", "Index", new { sortOrder = ViewBag.SpecializationSort })
            </th>
            <th>
                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSort })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Specialization.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Details</a>
                    @if (CurrentUser.Roles.Contains("Secretary"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                    }

                </td>
            </tr>

        }
    </tbody>
</table>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.22/css/dataTables.bootstrap4.min.css">
    <script src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.22/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/js/sort-table.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
}


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary btn-sm active @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-secondary btn-sm active @nextDisabled">
    Next
</a>